package org.dexterity.darueira.azimuteerp.monolith.springvue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EventProgramAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventProgramAllPropertiesEquals(EventProgram expected, EventProgram actual) {
        assertEventProgramAutoGeneratedPropertiesEquals(expected, actual);
        assertEventProgramAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventProgramAllUpdatablePropertiesEquals(EventProgram expected, EventProgram actual) {
        assertEventProgramUpdatableFieldsEquals(expected, actual);
        assertEventProgramUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventProgramAutoGeneratedPropertiesEquals(EventProgram expected, EventProgram actual) {
        assertThat(expected)
            .as("Verify EventProgram auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventProgramUpdatableFieldsEquals(EventProgram expected, EventProgram actual) {
        assertThat(expected)
            .as("Verify EventProgram relevant properties")
            .satisfies(
                e -> assertThat(e.getPercentageExecution()).as("check percentageExecution").isEqualTo(actual.getPercentageExecution())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventProgramUpdatableRelationshipsEquals(EventProgram expected, EventProgram actual) {
        assertThat(expected)
            .as("Verify EventProgram relationships")
            .satisfies(e -> assertThat(e.getEvent()).as("check event").isEqualTo(actual.getEvent()))
            .satisfies(e -> assertThat(e.getProgram()).as("check program").isEqualTo(actual.getProgram()))
            .satisfies(e -> assertThat(e.getResponsiblePerson()).as("check responsiblePerson").isEqualTo(actual.getResponsiblePerson()));
    }
}
