package org.dexterity.darueira.azimuteerp.monolith.springvue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrganizationMembershipAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationMembershipAllPropertiesEquals(OrganizationMembership expected, OrganizationMembership actual) {
        assertOrganizationMembershipAutoGeneratedPropertiesEquals(expected, actual);
        assertOrganizationMembershipAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationMembershipAllUpdatablePropertiesEquals(
        OrganizationMembership expected,
        OrganizationMembership actual
    ) {
        assertOrganizationMembershipUpdatableFieldsEquals(expected, actual);
        assertOrganizationMembershipUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationMembershipAutoGeneratedPropertiesEquals(
        OrganizationMembership expected,
        OrganizationMembership actual
    ) {
        assertThat(expected)
            .as("Verify OrganizationMembership auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationMembershipUpdatableFieldsEquals(OrganizationMembership expected, OrganizationMembership actual) {
        assertThat(expected)
            .as("Verify OrganizationMembership relevant properties")
            .satisfies(e -> assertThat(e.getJoinedAt()).as("check joinedAt").isEqualTo(actual.getJoinedAt()))
            .satisfies(e -> assertThat(e.getActivationStatus()).as("check activationStatus").isEqualTo(actual.getActivationStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationMembershipUpdatableRelationshipsEquals(
        OrganizationMembership expected,
        OrganizationMembership actual
    ) {
        assertThat(expected)
            .as("Verify OrganizationMembership relationships")
            .satisfies(e -> assertThat(e.getOrganization()).as("check organization").isEqualTo(actual.getOrganization()))
            .satisfies(e -> assertThat(e.getPerson()).as("check person").isEqualTo(actual.getPerson()));
    }
}
