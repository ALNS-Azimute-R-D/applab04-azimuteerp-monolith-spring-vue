package org.dexterity.darueira.azimuteerp.monolith.springvue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WarehouseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseAllPropertiesEquals(Warehouse expected, Warehouse actual) {
        assertWarehouseAutoGeneratedPropertiesEquals(expected, actual);
        assertWarehouseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseAllUpdatablePropertiesEquals(Warehouse expected, Warehouse actual) {
        assertWarehouseUpdatableFieldsEquals(expected, actual);
        assertWarehouseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseAutoGeneratedPropertiesEquals(Warehouse expected, Warehouse actual) {
        assertThat(expected)
            .as("Verify Warehouse auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseUpdatableFieldsEquals(Warehouse expected, Warehouse actual) {
        assertThat(expected)
            .as("Verify Warehouse relevant properties")
            .satisfies(e -> assertThat(e.getAcronym()).as("check acronym").isEqualTo(actual.getAcronym()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStreetAddress()).as("check streetAddress").isEqualTo(actual.getStreetAddress()))
            .satisfies(e -> assertThat(e.getHouseNumber()).as("check houseNumber").isEqualTo(actual.getHouseNumber()))
            .satisfies(e -> assertThat(e.getLocationName()).as("check locationName").isEqualTo(actual.getLocationName()))
            .satisfies(e -> assertThat(e.getPostalCode()).as("check postalCode").isEqualTo(actual.getPostalCode()))
            .satisfies(e -> assertThat(e.getPointLocation()).as("check pointLocation").isEqualTo(actual.getPointLocation()))
            .satisfies(
                e ->
                    assertThat(e.getPointLocationContentType())
                        .as("check pointLocation contenty type")
                        .isEqualTo(actual.getPointLocationContentType())
            )
            .satisfies(e -> assertThat(e.getMainEmail()).as("check mainEmail").isEqualTo(actual.getMainEmail()))
            .satisfies(e -> assertThat(e.getLandPhoneNumber()).as("check landPhoneNumber").isEqualTo(actual.getLandPhoneNumber()))
            .satisfies(e -> assertThat(e.getMobilePhoneNumber()).as("check mobilePhoneNumber").isEqualTo(actual.getMobilePhoneNumber()))
            .satisfies(e -> assertThat(e.getFaxNumber()).as("check faxNumber").isEqualTo(actual.getFaxNumber()))
            .satisfies(
                e ->
                    assertThat(e.getCustomAttributesDetailsJSON())
                        .as("check customAttributesDetailsJSON")
                        .isEqualTo(actual.getCustomAttributesDetailsJSON())
            )
            .satisfies(e -> assertThat(e.getActivationStatus()).as("check activationStatus").isEqualTo(actual.getActivationStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseUpdatableRelationshipsEquals(Warehouse expected, Warehouse actual) {}
}
