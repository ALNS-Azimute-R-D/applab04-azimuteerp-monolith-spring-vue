package org.dexterity.darueira.azimuteerp.monolith.springvue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ArtisticGenreAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArtisticGenreAllPropertiesEquals(ArtisticGenre expected, ArtisticGenre actual) {
        assertArtisticGenreAutoGeneratedPropertiesEquals(expected, actual);
        assertArtisticGenreAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArtisticGenreAllUpdatablePropertiesEquals(ArtisticGenre expected, ArtisticGenre actual) {
        assertArtisticGenreUpdatableFieldsEquals(expected, actual);
        assertArtisticGenreUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArtisticGenreAutoGeneratedPropertiesEquals(ArtisticGenre expected, ArtisticGenre actual) {
        assertThat(expected)
            .as("Verify ArtisticGenre auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArtisticGenreUpdatableFieldsEquals(ArtisticGenre expected, ArtisticGenre actual) {
        assertThat(expected)
            .as("Verify ArtisticGenre relevant properties")
            .satisfies(e -> assertThat(e.getAcronym()).as("check acronym").isEqualTo(actual.getAcronym()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArtisticGenreUpdatableRelationshipsEquals(ArtisticGenre expected, ArtisticGenre actual) {
        assertThat(expected)
            .as("Verify ArtisticGenre relationships")
            .satisfies(e -> assertThat(e.getArtisticGenres()).as("check artisticGenres").isEqualTo(actual.getArtisticGenres()));
    }
}
